import{_ as s,c as n,o as p,ae as e}from"./chunks/framework.Dq8kYo8j.js";const h=JSON.parse('{"title":"Simple Activities - Display Name","description":"","frontmatter":{},"headers":[],"relativePath":"Sensors/OLED/oled1.md","filePath":"Sensors/OLED/oled1.md"}'),l={name:"Sensors/OLED/oled1.md"};function i(t,a,o,r,c,d){return p(),n("div",null,a[0]||(a[0]=[e(`<h1 id="simple-activities-display-name" tabindex="-1">Simple Activities - Display Name <a class="header-anchor" href="#simple-activities-display-name" aria-label="Permalink to &quot;Simple Activities - Display Name&quot;">â€‹</a></h1><h2 id="problem-statement" tabindex="-1">Problem Statement <a class="header-anchor" href="#problem-statement" aria-label="Permalink to &quot;Problem Statement&quot;">â€‹</a></h2><ul><li>Write a code to Alphabot so that Our name should be displayed in the OLED.</li></ul><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">â€‹</a></h2><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">â€‹</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  #include &lt;Wire.h&gt;</span></span>
<span class="line"><span>  #include &lt;Adafruit_GFX.h&gt;</span></span>
<span class="line"><span>  #include &lt;Adafruit_SSD1306.h&gt;</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  // OLED display setup</span></span>
<span class="line"><span>  #define OLED_RESET 9</span></span>
<span class="line"><span>  Adafruit_SSD1306 display(OLED_RESET);  // For I2C communication</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  void setup() {</span></span>
<span class="line"><span>    // Initialize OLED with I2C address 0x3C</span></span>
<span class="line"><span>    display.begin(SSD1306_SWITCHCAPVCC, 0x3C);</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    // Clear the display buffer</span></span>
<span class="line"><span>    display.clearDisplay();</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    // Basic text display</span></span>
<span class="line"><span>    display.setTextSize(1.4);      // Text Size (Pixels)</span></span>
<span class="line"><span>    display.setTextColor(WHITE); // Draw white text</span></span>
<span class="line"><span>    display.setCursor(0,0);      // setCursor(Left - Right,Top - Bottom)</span></span>
<span class="line"><span>    display.println(&quot;Alphabot V2&quot;);</span></span>
<span class="line"><span>    display.println(&quot;Ready!&quot;);</span></span>
<span class="line"><span>    display.display(); // Displays The Text </span></span>
<span class="line"><span>    delay(2000);</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  void DispUrName(){</span></span>
<span class="line"><span>    display.clearDisplay(); // Clears The Previous Texts</span></span>
<span class="line"><span>    display.setCursor(0,0);</span></span>
<span class="line"><span>    display.println(&quot;Hello&quot;);</span></span>
<span class="line"><span>    display.setCursor(0,12);</span></span>
<span class="line"><span>    display.println(&quot;Im Shyam&quot;);</span></span>
<span class="line"><span>    display.display();</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>void Rand(){</span></span>
<span class="line"><span>  display.clearDisplay(); </span></span>
<span class="line"><span>  display.setCursor(35,5);</span></span>
<span class="line"><span>  display.println(&quot;Just For&quot;);</span></span>
<span class="line"><span>  display.setCursor(30,15);</span></span>
<span class="line"><span>  display.println(&quot;Calibration&quot;);</span></span>
<span class="line"><span>  display.display();</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>void loop(){</span></span>
<span class="line"><span>  DispUrName();</span></span>
<span class="line"><span>  delay(1000);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  Rand();</span></span>
<span class="line"><span>  delay(5000);</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;Output&quot;">â€‹</a></h2><h2 id="exercise-ðŸ¤–" tabindex="-1">Exercise ðŸ¤– <a class="header-anchor" href="#exercise-ðŸ¤–" aria-label="Permalink to &quot;Exercise ðŸ¤–&quot;">â€‹</a></h2><ul><li>Try to print rectangle ,Triangle and circle in the OLED Display.</li><li>Try to Print a Simple Stickman in the OLED Display</li></ul>`,9)]))}const y=s(l,[["render",i]]);export{h as __pageData,y as default};

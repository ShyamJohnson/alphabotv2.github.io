import{_ as t,c as a,o,ae as r}from"./chunks/framework.Dq8kYo8j.js";const p=JSON.parse('{"title":"Task 6 - Edge Detection Alphabot","description":"","frontmatter":{},"headers":[],"relativePath":"challenges/edge.md","filePath":"challenges/edge.md"}'),l={name:"challenges/edge.md"};function i(n,e,s,d,h,c){return o(),a("div",null,e[0]||(e[0]=[r('<h1 id="task-6-edge-detection-alphabot" tabindex="-1">Task 6 - Edge Detection Alphabot <a class="header-anchor" href="#task-6-edge-detection-alphabot" aria-label="Permalink to &quot;Task 6 - Edge Detection Alphabot&quot;">​</a></h1><h2 id="task" tabindex="-1">Task <a class="header-anchor" href="#task" aria-label="Permalink to &quot;Task&quot;">​</a></h2><h3 id="edge-detection-alphabot" tabindex="-1">Edge Detection Alphabot <a class="header-anchor" href="#edge-detection-alphabot" aria-label="Permalink to &quot;Edge Detection Alphabot&quot;">​</a></h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><h2 id="functions-to-do" tabindex="-1">Functions To Do <a class="header-anchor" href="#functions-to-do" aria-label="Permalink to &quot;Functions To Do&quot;">​</a></h2><ol><li><strong>IR Sensor Input</strong><ul><li>Lower sensor values (&lt; 700) indicatse drop-off.</li><li>If the far-left (sensorV[0]) or far-right (sensorV[4]) sensor detects an edge (value &lt; 700) -- Stops immediately, Reverses briefly (to back away from the edge). Turns right (to reorient away from the edge). </li></ul></li><li><strong>Motor Control</strong><ul><li>Functions for forward, backward, left, right, and stop.</li></ul></li></ol><h2 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;Output&quot;">​</a></h2><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><p><a href="https://github.com/deepaavudiappan/AlphabotV2/tree/00155f95efc2b72ecd84d1d14afa7b96079c1fd0/Alphabot%20V2%20-%20Ar/Activities/Edge_Detection_Alphabot" target="_blank">Edge_Detection_Alphabot</a></p>',9)]))}const b=t(l,[["render",i]]);export{p as __pageData,b as default};

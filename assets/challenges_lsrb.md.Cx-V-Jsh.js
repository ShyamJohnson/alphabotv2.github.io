import{_ as o}from"./chunks/LSRB._b74UyXp.js";import{_ as i}from"./chunks/videosh.BUczNqhx.js";import{_ as l,C as n,c as r,o as s,ae as a,G as h,w as d,j as u}from"./chunks/framework.Dq8kYo8j.js";const T=JSON.parse('{"title":"Task 8 - Line Maze Solving Alphabot (LSRB)","description":"","frontmatter":{},"headers":[],"relativePath":"challenges/lsrb.md","filePath":"challenges/lsrb.md"}'),c={name:"challenges/lsrb.md"};function _(p,e,m,g,b,f){const t=n("center");return s(),r("div",null,[e[1]||(e[1]=a('<h1 id="task-8-line-maze-solving-alphabot-lsrb" tabindex="-1">Task 8 - Line Maze Solving Alphabot (LSRB) <a class="header-anchor" href="#task-8-line-maze-solving-alphabot-lsrb" aria-label="Permalink to &quot;Task 8 - Line Maze Solving Alphabot (LSRB)&quot;">​</a></h1><h2 id="task" tabindex="-1">Task <a class="header-anchor" href="#task" aria-label="Permalink to &quot;Task&quot;">​</a></h2><h3 id="line-maze-solving-using-lsrb-algorithm" tabindex="-1">Line Maze Solving using LSRB Algorithm <a class="header-anchor" href="#line-maze-solving-using-lsrb-algorithm" aria-label="Permalink to &quot;Line Maze Solving using LSRB Algorithm&quot;">​</a></h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><h2 id="functions-to-do" tabindex="-1">Functions To Do <a class="header-anchor" href="#functions-to-do" aria-label="Permalink to &quot;Functions To Do&quot;">​</a></h2><ol><li><strong>Sensor &amp; Movement Logic</strong><ul><li>Reads 5 IR sensors to detect a white line on a dark surface (lower values = brighter surface).</li><li>Follows the line using left, right, and center sensors to stay on track.</li><li>Detects junctions (T, L, +, dead ends) using sensor patterns.</li><li>Implements maze-solving logic (e.g., left-hand or right-hand rule) to decide turns at junctions.</li><li>Records path taken for possible backtracking or optimization.</li><li>Stops at the end of the maze or when a goal is detected.</li></ul></li><li><strong>Motor Control</strong><ul><li>Differential steering (slower inner wheel for smooth turns).</li><li>Precise control for sharp turns at junctions.</li></ul></li></ol><h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-label="Permalink to &quot;&quot;">​</a></h2>',7)),h(t,null,{default:d(()=>e[0]||(e[0]=[u("img",{src:o,width:"500",height:"700"},null,-1)])),_:1,__:[0]}),e[2]||(e[2]=a('<h2 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;Output&quot;">​</a></h2><h2 id="-2" tabindex="-1"><a class="header-anchor" href="#-2" aria-label="Permalink to &quot;&quot;">​</a></h2><div class="video-container"><video controls width="75%"><source src="'+i+'" type="video/mp4"> Your browser doesn&#39;t support HTML5 video. </video></div><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><p><a href="https://github.com/deepaavudiappan/AlphabotV2/tree/e5715e0cc9439e9033e58b9eef1fa5abf4e590f2/Alphabot%20V2%20-%20Ar/Activities/Maze_solving__LSRB_" target="_blank">Maze_Solving_LSRB</a></p><h6> (Please Go To Main branch)</h6>',6))])}const q=l(c,[["render",_]]);export{T as __pageData,q as default};

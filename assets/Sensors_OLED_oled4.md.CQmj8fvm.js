import{_ as s,c as n,o as p,ae as l}from"./chunks/framework.Dq8kYo8j.js";const h=JSON.parse('{"title":"Simple Activities - Display Triangle","description":"","frontmatter":{},"headers":[],"relativePath":"Sensors/OLED/oled4.md","filePath":"Sensors/OLED/oled4.md"}'),e={name:"Sensors/OLED/oled4.md"};function i(t,a,r,c,o,d){return p(),n("div",null,a[0]||(a[0]=[l(`<h1 id="simple-activities-display-triangle" tabindex="-1">Simple Activities - Display Triangle <a class="header-anchor" href="#simple-activities-display-triangle" aria-label="Permalink to &quot;Simple Activities - Display Triangle&quot;">â€‹</a></h1><h2 id="problem-statement" tabindex="-1">Problem Statement <a class="header-anchor" href="#problem-statement" aria-label="Permalink to &quot;Problem Statement&quot;">â€‹</a></h2><ul><li>Write a code to Alphabot so that a Small Triangle should be displayed in OLED Display.</li></ul><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">â€‹</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#include &lt;Wire.h&gt;</span></span>
<span class="line"><span>#include &lt;Adafruit_GFX.h&gt;</span></span>
<span class="line"><span>#include &lt;Adafruit_SSD1306.h&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#define OLED_RESET 9</span></span>
<span class="line"><span>Adafruit_SSD1306 display(OLED_RESET);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>void setup() {</span></span>
<span class="line"><span>  // Initialize OLED with I2C address 0x3C</span></span>
<span class="line"><span>  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);</span></span>
<span class="line"><span>  display.clearDisplay();</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  // Display introductory text</span></span>
<span class="line"><span>  display.setTextSize(1);</span></span>
<span class="line"><span>  display.setTextColor(WHITE);</span></span>
<span class="line"><span>  display.setCursor(0,0);</span></span>
<span class="line"><span>  display.println(&quot;AlphaBot V2&quot;);</span></span>
<span class="line"><span>  display.println(&quot;Shapes Demo&quot;);</span></span>
<span class="line"><span>  display.display();</span></span>
<span class="line"><span>  delay(500);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>void loop() {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  drawTriangle();</span></span>
<span class="line"><span>  delay(2000);}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>void drawTriangle() {</span></span>
<span class="line"><span>  display.clearDisplay();</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  // Draw triangle (x0,y0, x1,y1, x2,y2, color)</span></span>
<span class="line"><span>  display.drawTriangle(40, 20, 65, 10, 90, 20, WHITE);</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  // Draw filled triangle</span></span>
<span class="line"><span>  display.fillTriangle(40, 20, 65, 10, 90, 20, WHITE);</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  display.display();</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;Output&quot;">â€‹</a></h2><h2 id="exercise-ðŸ¤–" tabindex="-1">Exercise ðŸ¤– <a class="header-anchor" href="#exercise-ðŸ¤–" aria-label="Permalink to &quot;Exercise ðŸ¤–&quot;">â€‹</a></h2><ul><li>Try to Print a Simple Stickman in the OLED Display</li></ul>`,8)]))}const y=s(e,[["render",i]]);export{h as __pageData,y as default};
